#!/bin/bash

die() {
	echo "$*"
	exit 1
} >&2

usage() {
	die "Usage: $0 <smtp|smtps> <host> <login> [-p port] [-s sleep] <files...>"
}

PROTOCOL=$1
HOST=$2
LOGIN=$3
shift 3

while getopts "p:s:" opt; do
	case $opt in
		p)
			PORT="$OPTARG"
			;;
		s)
			SLEEP="$OPTARG"
			;;
		*)
			usage
			;;
	esac
done
shift $((OPTIND-1))

[ -z "$HOST" ] && usage
[ -z "$LOGIN" ] && usage
[ -z "$SLEEP" ] && SLEEP="0.5"
[ -r "$1" ] || usage

case "$PROTOCOL" in
	smtp)
		[ -z "$PORT" ] && PORT=25
		CONNECT="telnet $HOST $PORT"
		;;
	smtps)
		[ -z "$PORT" ] && PORT=465
		CONNECT="openssl s_client -quiet -connect $HOST:$PORT"
		;;
	debug)
		CONNECT="cat > debug.log"
		;;
	*)
		usage
		;;
esac

smtp_cmd() {
	echo "$*"
	sleep_cmd
}

sleep_cmd() {
	sleep "$SLEEP"
}

read -s -p "Password: " PASS
echo
{
	sleep_cmd
	smtp_cmd "EHLO $HOST"
	smtp_cmd "AUTH PLAIN $(echo -n -e "\0$LOGIN\0$PASS"|base64)"
	for f in "$@"; do
		[ -r "$f" ] || { echo "Cannot read $f. Skipped." >&2 ; continue ; }
		eval $(sed -n 's/^To:.*[[:blank:]]\([[:graph:]]\+@[[:graph:]]\+\)/TO="\1"/p;s/^From:.*[[:blank:]]\([[:graph:]]\+@[[:graph:]]\+\)/FROM="\1"/p' "$f")
		smtp_cmd "MAIL FROM: $FROM BODY=8BITMIME"
		smtp_cmd "RCPT TO: $TO"
		smtp_cmd "DATA"
		tail -n+2 "$f"
		echo -n -e "\r\n.\r\n"
		sleep_cmd
	done
	smtp_cmd "QUIT"
} | eval "$CONNECT"
